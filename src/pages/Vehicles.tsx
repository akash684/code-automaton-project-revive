
import { useState, useEffect } from 'react';
import { Search, Filter, SlidersHorizontal } from 'lucide-react';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';
import { Card, CardContent } from '@/components/ui/card';
import Navbar from '@/components/Navbar';
import Footer from '@/components/Footer';
import VehicleCard from '@/components/VehicleCard';
import FiltersPanel from '@/components/FiltersPanel';
import { Vehicle } from '@/types';

// GENERATED BY Lovable AI
const Vehicles = () => {
  const [vehicles, setVehicles] = useState<Vehicle[]>([]);
  const [filteredVehicles, setFilteredVehicles] = useState<Vehicle[]>([]);
  const [searchTerm, setSearchTerm] = useState('');
  const [sortBy, setSortBy] = useState('price-low');
  const [showFilters, setShowFilters] = useState(false);
  const [loading, setLoading] = useState(true);

  // Mock data - in real app, this would come from Supabase
  useEffect(() => {
    const mockVehicles: Vehicle[] = [
      {
        id: '1',
        title: 'Maruti Suzuki Swift',
        type: 'car',
        price: 750000,
        year: 2022,
        fuel: 'Petrol',
        transmission: 'Manual',
        image: 'https://images.unsplash.com/photo-1583121274602-3e2820c69888?w=500',
        location: 'Delhi',
        brand: 'Maruti Suzuki',
        mileage: 15000
      },
      {
        id: '2',
        title: 'Honda City',
        type: 'car',
        price: 1200000,
        year: 2023,
        fuel: 'Petrol',
        transmission: 'Automatic',
        image: 'https://images.unsplash.com/photo-1549317661-bd32c8ce0db2?w=500',
        location: 'Mumbai',
        brand: 'Honda',
        mileage: 8000
      },
      {
        id: '3',
        title: 'Honda CB350',
        type: 'bike',
        price: 185000,
        year: 2023,
        fuel: 'Petrol',
        transmission: 'Manual',
        image: 'https://images.unsplash.com/photo-1558618047-3c8c76ca7d13?w=500',
        location: 'Mumbai',
        brand: 'Honda',
        mileage: 5000
      },
      {
        id: '4',
        title: 'Royal Enfield Classic 350',
        type: 'bike',
        price: 220000,
        year: 2022,
        fuel: 'Petrol',
        transmission: 'Manual',
        image: 'https://images.unsplash.com/photo-1558603668-6570496b66f8?w=500',
        location: 'Bangalore',
        brand: 'Royal Enfield',
        mileage: 12000
      },
      {
        id: '5',
        title: 'Hyundai Creta',
        type: 'car',
        price: 1400000,
        year: 2023,
        fuel: 'Diesel',
        transmission: 'Automatic',
        image: 'https://images.unsplash.com/photo-1552519507-da3b142c6e3d?w=500',
        location: 'Chennai',
        brand: 'Hyundai',
        mileage: 3000
      }
    ];

    setTimeout(() => {
      setVehicles(mockVehicles);
      setFilteredVehicles(mockVehicles);
      setLoading(false);
    }, 1000);
  }, []);

  useEffect(() => {
    let filtered = vehicles.filter(vehicle =>
      vehicle.title.toLowerCase().includes(searchTerm.toLowerCase()) ||
      vehicle.brand?.toLowerCase().includes(searchTerm.toLowerCase())
    );

    // Sort vehicles
    filtered.sort((a, b) => {
      switch (sortBy) {
        case 'price-low':
          return a.price - b.price;
        case 'price-high':
          return b.price - a.price;
        case 'year-new':
          return b.year - a.year;
        case 'year-old':
          return a.year - b.year;
        default:
          return 0;
      }
    });

    setFilteredVehicles(filtered);
  }, [vehicles, searchTerm, sortBy]);

  if (loading) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-blue-50 via-white to-purple-50">
        <Navbar />
        <div className="pt-24 pb-12">
          <div className="container mx-auto px-4">
            <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
              {[...Array(6)].map((_, i) => (
                <Card key={i} className="animate-pulse">
                  <div className="h-48 bg-gray-200"></div>
                  <CardContent className="p-6">
                    <div className="h-4 bg-gray-200 rounded mb-2"></div>
                    <div className="h-6 bg-gray-200 rounded mb-4"></div>
                    <div className="grid grid-cols-2 gap-3 mb-4">
                      {[...Array(4)].map((_, j) => (
                        <div key={j} className="h-4 bg-gray-200 rounded"></div>
                      ))}
                    </div>
                    <div className="h-10 bg-gray-200 rounded"></div>
                  </CardContent>
                </Card>
              ))}
            </div>
          </div>
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 via-white to-purple-50">
      <Navbar />
      
      <div className="pt-24 pb-12">
        <div className="container mx-auto px-4">
          {/* Header */}
          <div className="text-center mb-12">
            <h1 className="text-4xl md:text-5xl font-bold text-gray-900 mb-4">
              Browse <span className="text-transparent bg-clip-text bg-gradient-to-r from-blue-600 to-purple-600">Vehicles</span>
            </h1>
            <p className="text-xl text-gray-600">Find your perfect car or bike from thousands of listings</p>
          </div>

          {/* Search and Filters */}
          <div className="mb-8">
            <div className="flex flex-col md:flex-row gap-4 mb-6">
              <div className="relative flex-1">
                <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-5 h-5" />
                <Input
                  placeholder="Search vehicles, brands..."
                  value={searchTerm}
                  onChange={(e) => setSearchTerm(e.target.value)}
                  className="pl-10 h-12"
                />
              </div>
              <Select value={sortBy} onValueChange={setSortBy}>
                <SelectTrigger className="w-full md:w-48 h-12">
                  <SelectValue placeholder="Sort by" />
                </SelectTrigger>
                <SelectContent>
                  <SelectItem value="price-low">Price: Low to High</SelectItem>
                  <SelectItem value="price-high">Price: High to Low</SelectItem>
                  <SelectItem value="year-new">Year: Newest First</SelectItem>
                  <SelectItem value="year-old">Year: Oldest First</SelectItem>
                </SelectContent>
              </Select>
              <Button
                variant="outline"
                onClick={() => setShowFilters(!showFilters)}
                className="md:w-auto h-12"
              >
                <SlidersHorizontal className="w-4 h-4 mr-2" />
                Filters
              </Button>
            </div>

            {showFilters && (
              <Card className="mb-6">
                <CardContent className="p-6">
                  <FiltersPanel />
                </CardContent>
              </Card>
            )}
          </div>

          {/* Results */}
          <div className="flex items-center justify-between mb-6">
            <p className="text-gray-600">
              Showing {filteredVehicles.length} of {vehicles.length} vehicles
            </p>
          </div>

          {/* Vehicle Grid */}
          <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
            {filteredVehicles.map((vehicle) => (
              <VehicleCard key={vehicle.id} vehicle={vehicle} />
            ))}
          </div>

          {filteredVehicles.length === 0 && (
            <div className="text-center py-16">
              <p className="text-xl text-gray-600">No vehicles found matching your criteria.</p>
              <Button
                onClick={() => {
                  setSearchTerm('');
                  setSortBy('price-low');
                }}
                className="mt-4"
              >
                Clear Filters
              </Button>
            </div>
          )}
        </div>
      </div>

      <Footer />
    </div>
  );
};

export default Vehicles;
